require('dotenv').config();
const express = require('express');
const fs = require('fs');
const cors = require('cors');  
const app = express();

const PORT = 4000; // using a different port from our actual server to avoid confilct

app.use(cors()); // Allow React Native to fetch from this server

// API endpoint to serve the latest stored tweets
app.get('/static-tweets', (_, res) => {
    try {
        console.log('Serving static tweets...');
        const rawData = fs.readFileSync(__dirname + '/TweetFetch.json', 'utf8'); // Ensure correct path
        const tweets = JSON.parse(rawData);
        res.status(200).json(tweets);
    } catch (error) {
        console.error('Error fetching static tweets:', error.message);
        res.status(500).json({ error: 'Failed to fetch static tweets' });
    }
});

// Start the static server
app.listen(PORT, '0.0.0.0', () => {
    console.log(`Static server is running on port ${PORT}`);
});

/* 
 what cors does is allow our react native app to talk to our express server, even though theyre running in different place

without it react native will block requests from a different server for safety purpose, basically cors in a sense tells our 
server that it okay to let this client access the data

to use just do these two things:
const cors = require('cors'); // This import cors
app.use(cors()); //this allows the server to accept outside request

*/

